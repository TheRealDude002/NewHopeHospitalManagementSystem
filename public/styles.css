/* Modern Futuristic CSS for Patient Registration Form */

:root {
  --primary-color: #0070f3;
  --primary-light: #3291ff;
  --primary-dark: #0050b3;
  --accent-color: #00c4cc;
  --success-color: #10b981;
  --warning-color: #f59e0b;
  --danger-color: #ef4444;
  --background: #f0f5ff;
  --card-bg: #ffffff;
  --text-primary: #1f2937;
  --text-secondary: #4b5563;
  --border-color: #e5e7eb;
  --input-bg: #f9fafb;
  --shadow-sm: 0 1px 2px 0 rgba(0, 0, 0, 0.05);
  --shadow-md: 0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06);
  --shadow-lg: 0 10px 15px -3px rgba(0, 0, 0, 0.1), 0 4px 6px -2px rgba(0, 0, 0, 0.05);
  --transition: all 0.3s ease;
}

* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
  font-family: 'Segoe UI', 'SF Pro Display', -apple-system, BlinkMacSystemFont, sans-serif;
}

body {
  background-color: var(--background);
  background-image: 
    radial-gradient(circle at 10% 20%, rgba(0, 112, 243, 0.05) 0%, transparent 20%),
    radial-gradient(circle at 90% 80%, rgba(0, 196, 204, 0.07) 0%, transparent 25%);
  color: var(--text-primary);
  line-height: 1.6;
  display: flex;
  justify-content: center;
  align-items: center;
  min-height: 100vh;
  padding: 2rem 1rem;
}

.form-container {
  width: 100%;
  max-width: 700px;
  background-color: var(--card-bg);
  border-radius: 16px;
  box-shadow: var(--shadow-lg);
  padding: 2.5rem;
  position: relative;
  overflow: hidden;
  animation: fadeIn 0.5s ease-out;
}

.form-container::before {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 6px;
  background: linear-gradient(90deg, var(--primary-color), var(--accent-color));
}

.form-container h3 {
  font-size: 1.8rem;
  color: var(--primary-color);
  margin-bottom: 1.5rem;
  text-align: center;
  position: relative;
  padding-bottom: 0.75rem;
}

.form-container h3::after {
  content: '';
  position: absolute;
  bottom: 0;
  left: 50%;
  transform: translateX(-50%);
  width: 80px;
  height: 3px;
  background: linear-gradient(90deg, var(--primary-color), var(--accent-color));
  border-radius: 3px;
}

#patientForm {
  display: grid;
  grid-template-columns: repeat(2, 1fr);
  gap: 1.5rem;
}

.form-group {
  margin-bottom: 0.5rem;
}

/* Make some fields span full width */
.form-group:nth-child(3),
.form-group:nth-child(4),
.form-group:nth-child(9),

#output {
  grid-column: span 2;
}

label {
  display: block;
  margin-bottom: 0.5rem;
  font-weight: 500;
  color: var(--text-secondary);
  font-size: 0.95rem;
  transition: var(--transition);
}

input, select {
  width: 100%;
  padding: 0.75rem 1rem;
  border: 1px solid var(--border-color);
  border-radius: 8px;
  background-color: var(--input-bg);
  color: var(--text-primary);
  font-size: 1rem;
  transition: var(--transition);
  box-shadow: var(--shadow-sm);
}

input:focus, select:focus {
  outline: none;
  border-color: var(--primary-light);
  box-shadow: 0 0 0 3px rgba(0, 112, 243, 0.15);
}

input:hover, select:hover {
  border-color: var(--primary-light);
}

small {
  display: block;
  margin-top: 0.25rem;
  color: var(--text-secondary);
  font-size: 0.75rem;
}

button[type="submit"] {
  grid-column: span 2;
  background: linear-gradient(135deg, var(--primary-color), var(--primary-dark));
  color: white;
  border: none;
  padding: 0.875rem 1.5rem;
  border-radius: 8px;
  font-weight: 600;
  font-size: 1rem;
  cursor: pointer;
  transition: var(--transition);
  box-shadow: var(--shadow-md);
  position: relative;
  overflow: hidden;
  margin-top: 1rem;
}

button[type="submit"]::before {
  content: '';
  position: absolute;
  top: 0;
  left: -100%;
  width: 100%;
  height: 100%;
  background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.2), transparent);
  transition: 0.5s;
}

button[type="submit"]:hover {
  transform: translateY(-2px);
  box-shadow: 0 6px 15px rgba(0, 112, 243, 0.25);
}

button[type="submit"]:hover::before {
  left: 100%;
}

button[type="submit"]:active {
  transform: translateY(1px);
}

#output {
  margin-top: 20px;
  padding: 10px;
  background: #e6e6e6;
  border-radius: 5px;
}

/* Custom styling for specific inputs */
input[type="date"] {
  color: var(--text-primary);
  padding-right: 0.5rem;
}

input[type="number"] {
  appearance: textfield;
}

input[type="number"]::-webkit-outer-spin-button,
input[type="number"]::-webkit-inner-spin-button {
  -webkit-appearance: none;
  margin: 0;
}

select {
  cursor: pointer;
  background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='16' height='16' viewBox='0 0 24 24' fill='none' stroke='%230070f3' stroke-width='2' stroke-linecap='round' stroke-linejoin='round'%3E%3Cpolyline points='6 9 12 15 18 9'%3E%3C/polyline%3E%3C/svg%3E");
  background-repeat: no-repeat;
  background-position: right 1rem center;
  background-size: 1em;
  padding-right: 2.5rem;
}

/* Animations */
@keyframes fadeIn {
  from { opacity: 0; transform: translateY(10px); }
  to { opacity: 1; transform: translateY(0); }
}

/* Add a subtle pulse animation to the submit button */
@keyframes pulse {
  0% { box-shadow: 0 0 0 0 rgba(0, 112, 243, 0.4); }
  70% { box-shadow: 0 0 0 10px rgba(0, 112, 243, 0); }
  100% { box-shadow: 0 0 0 0 rgba(0, 112, 243, 0); }
}

/* Add JavaScript support for showing the output */
#output.show {
  display: block;
  animation: fadeIn 0.5s ease-out;
}

/* Responsive adjustments */
@media (max-width: 768px) {
  .form-container {
    padding: 1.5rem;
    border-radius: 12px;
  }
  
  #patientForm {
    grid-template-columns: 1fr;
  }
  
  .form-group,
  .form-group:nth-child(3),
  .form-group:nth-child(4),
  .form-group:nth-child(9),
  button[type="submit"],
  #output {
    grid-column: span 1;
  }
  
  .form-container h3 {
    font-size: 1.5rem;
  }
}

/* Add a subtle hover effect to form groups */
.form-group:hover label {
  color: var(--primary-color);
}

/* Add a subtle loading animation for the form */
@keyframes shimmer {
  0% { background-position: -1000px 0; }
  100% { background-position: 1000px 0; }
}

/* Add this to script.js to show the output area when form is submitted */
/* 
function submitForm() {
  const form = document.getElementById('patientForm');
  const output = document.getElementById('output');
  
  // Collect form data
  const formData = new FormData(form);
  let outputHTML = '<h4>Patient Information:</h4><ul>';
  
  for (const [key, value] of formData.entries()) {
    if (value) {
      outputHTML += `<li><strong>${key}:</strong> ${value}</li>`;
    }
  }
  
  outputHTML += '</ul>';
  
  // Display output
  output.innerHTML = outputHTML;
  output.classList.add('show');
}
*/